<!-- views/partials/order.ejs-->
<div class="main-container">
  <!-- Thanh tiêu đề -->
  <div class="page-title-bar">
    <h3>Danh sách đơn hàng</h3>
    <table>
      <thead>
        <tr>
          <th>Mã đơn hàng</th>
          <th>Sản phẩm</th>
          <th>Khách hàng</th>
          <th>Số lượng</th>
          <th>Giá</th>
          <th>Tổng tiền</th>
          <th>Trạng thái</th>
          <th>Ngày bán</th>
        </tr>
      </thead>
      <tbody>
        <% if (orders.length === 0) { %>
          <tr>
            <td colspan="8" class="text-center">Chưa có đơn hàng nào</td>
          </tr>
        <% } else { %>
          <% orders.forEach(order => { %>
            <tr>
              <td><%= order._id %></td>
              <td>
                <% if (order.product) { %> <!-- Kiểm tra nếu product tồn tại -->
                  <%= order.product.name %>
                <% } else { %>
                  Sản phẩm không có
                <% } %>
              </td>
              <td><%= order.customer.name %></td>
              <td><%= order.quantity %></td>
              <td><%= order.price.toLocaleString('vi-VN') %> ₫</td>
              <td><%= order.total.toLocaleString('vi-VN') %> ₫</td>
              <td><%= order.status || 'Đang xử lý' %></td>
              <td><%= order.date ? new Date(order.date).toLocaleDateString('vi-VN') : 'Chưa xác định' %></td>
            </tr>
          <% }) %>
        <% } %>
      </tbody>
      
    </table>
  </div>

  <!-- Form Thêm Đơn Hàng (Ẩn khi bắt đầu) -->
  <div class="add-order-form" id="add-order-form" style="display:none; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
    <h3>Thêm đơn hàng mới</h3>
    <form action="/order/create" method="POST">
      <label for="productName">Sản phẩm:</label>
      <input type="text" id="product" name="productName" list="products" required>
      <datalist id="products">
        <!-- Dữ liệu sẽ được điền qua JavaScript -->
      </datalist><br><br>
    
      <label for="customerId">Khách hàng:</label>
      <input type="text" id="customer" name="customerName" list="customers" required>
      <input type="hidden" id="customerId" name="customerId">
      <datalist id="customers">
        <!-- Dữ liệu sẽ được điền qua JavaScript -->
      </datalist><br><br>
    
      <label for="userName">Nhân viên bán hàng:</label>
      <input type="text" id="user" name="userName" list="users" required>
      <datalist id="users">
        <!-- Dữ liệu sẽ được điền qua JavaScript -->
      </datalist><br><br>
    
      <label for="quantity">Số lượng:</label>
      <input type="number" id="quantity" name="quantity" required><br><br>
    
      <label for="price">Giá:</label>
      <input type="number" id="price" name="price" readonly><br><br>
    
      <label for="total">Tổng tiền:</label>
      <input type="number" id="total" name="total" readonly><br><br>
    
      <button type="submit">Thêm đơn hàng</button>
    </form>
  </div>

  <button id="create-order-btn">Đặt hàng</button>
  <button id="export-excel">Xuất Excel</button>
</div>

<script>
  // Hiển thị form khi nhấn nút "Đặt hàng"
  document.getElementById('create-order-btn').addEventListener('click', function() {
    const form = document.getElementById('add-order-form');
    form.style.display = form.style.display === 'none' ? 'block' : 'none'; // Ẩn/hiện form
  });

  // Tạo event cho "Xuất Excel"
  document.getElementById('export-excel').addEventListener('click', () => {
    alert('Chức năng xuất Excel đang phát triển!');
  });

  function searchAndDisplayResults(inputElement, url, datalistId) {
  inputElement.addEventListener('input', function () {
    const query = inputElement.value;

    if (query.length > 0) {
      fetch(`/order${url}?query=${query}`)  // Thêm prefix '/order' vào URL
        .then(response => response.json())
        .then(data => {
          const datalist = document.getElementById(datalistId);
          datalist.innerHTML = '';

          data.forEach(item => {
            const option = document.createElement('option');
            option.value = item.name;
            datalist.appendChild(option);
          });
        })
        .catch(error => console.error('Error:', error));
    }
  });
}

document.getElementById('product').addEventListener('change', function() {
  const productName = encodeURIComponent(this.value);
  if (productName) {
    fetch(`/order/getPrice/${productName}`)
      .then(response => response.json())
      .then(data => {
        if (data.price) {
          document.getElementById('price').value = data.price;
          
          // Tính lại tổng tiền nếu có số lượng
          const quantity = document.getElementById('quantity').value;
          if (quantity) {
            document.getElementById('total').value = data.price * quantity;
          }
        }
      })
      .catch(error => console.error('Error:', error));
  }
});
// Tính tổng tiền khi số lượng thay đổi
document.getElementById('quantity').addEventListener('input', function () {
  const price = document.getElementById('price').value;
  const quantity = document.getElementById('quantity').value;
  if (price && quantity) {
    document.getElementById('total').value = price * quantity; // Tính tổng tiền
  }
});
// Lưu ID khi chọn khách hàng
document.getElementById('customer').addEventListener('input', function() {
  const customerName = this.value;
  if (customerName) {
    fetch(`/order/search/customers?query=${customerName}`)
      .then(response => response.json())
      .then(data => {
        const customer = data.find(c => c.name === customerName);
        if (customer) {
          document.getElementById('customerId').value = customer._id;
        }
      })
      .catch(error => console.error('Error:', error));
  }
});
document.addEventListener('DOMContentLoaded', function () {
  const customerInput = document.getElementById('customer');
  const productInput = document.getElementById('product');
  const userInput = document.getElementById('user');

  // Tìm kiếm khách hàng
  searchAndDisplayResults(customerInput, '/search/customers', 'customers');
  // Tìm kiếm sản phẩm
  searchAndDisplayResults(productInput, '/search/products', 'products');
  // Tìm kiếm nhân viên bán hàng
  searchAndDisplayResults(userInput, '/search/users', 'users');
});

</script>
